(
    (defolt) var
    (patern) var
    (value) var
    
    defolt (return) var
    patern (,) split (token) (
        token (=>) split (token) var
        (token 1 get eval (return) var)
        () value token 0 get eval find if
    ) for
    
    (token) free
    (patern) free
    (defolt) free

    return eval
) 
(match) var

[
    5.6 true (hello)
    64 35 false (梶塚太智)
] (list) var

list (item) (
    item type (
        (number) => (
            item　(の平方根は) concat item 0.5 pow　concat print
        ),
        (bool) => (
            item (をNOT演算すると) concat item not concat print
        ),
        (string) => (
            item (の長さは)　concat item　len  concat print
        )
    ) () 
    match eval
) for
